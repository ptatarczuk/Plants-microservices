spring.datasource.url=jdbc:postgresql://localhost:5432/${PLANTS_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970

spring.application.name=api-gateway

logging.level.root=info
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=info
logging.level.org.springframework.cloud.gateway=trace

## Plant Service Route
spring.cloud.gateway.routes[0].id=plant-service
# lb - load balance
spring.cloud.gateway.routes[0].uri=lb://plant-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/plant/**

## User Service Route
spring.cloud.gateway.routes[1].id=user-service
# lb - load balance
spring.cloud.gateway.routes[1].uri=lb://user-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/user/**

## Users Plant Service Route
spring.cloud.gateway.routes[2].id=users-plant-service
# lb - load balance
spring.cloud.gateway.routes[2].uri=lb://users-plant-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/users_plant/**

## Authentication Service Route
spring.cloud.gateway.routes[3].id=authentication-service-1
# lb - load balance
spring.cloud.gateway.routes[3].uri=lb://authentication-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/oauth2/**


spring.cloud.gateway.routes[4].id=authentication-service-2
# lb - load balance
spring.cloud.gateway.routes[4].uri=lb://authentication-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/auth/**
###################################################################################

## Notification Service Route
spring.cloud.gateway.routes[5].id=notification-service
# lb - load balance
spring.cloud.gateway.routes[5].uri=lb://notification-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/notification/**

## Chat Service Routes
spring.cloud.gateway.routes[6].id=chat-service-crud
spring.cloud.gateway.routes[6].uri=lb://chat-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/message/**

spring.cloud.gateway.routes[7].id=chat-service-websocket
# lb - load balance
spring.cloud.gateway.routes[7].uri=lb://chat-service
spring.cloud.gateway.routes[7].predicates[0]=Path=/stomp/**

## Discovery Server Route
spring.cloud.gateway.routes[8].id=discovery-server
spring.cloud.gateway.routes[8].uri=http://localhost:8761
spring.cloud.gateway.routes[8].predicates[0]=Path=/eureka/web
# it will forward the request to localhost:8761 without any url parameters
spring.cloud.gateway.routes[8].filters[0]=SetPath=/

## Discovery Server Static Resources Route
spring.cloud.gateway.routes[9].id=discovery-server-static
spring.cloud.gateway.routes[9].uri=http://localhost:8761
spring.cloud.gateway.routes[9].predicates[0]=Path=/eureka/**

## This is needed to send only single cors in Response Headers when using WebSockets that in config also have cors allowed origin
## The browser doesn't accept two cors headers
spring.cloud.gateway.default-filters=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

# Zipkin configuration
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
